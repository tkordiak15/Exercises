library(palmerpenguins)
quarto::quarto_render("exercises.qmd")
install.packages("quarto")
library(quarto)
quarto:quarto_render("Exercises.qmd")
system("quarto render exercises.qmd")
install.packages("dplyr")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
most_recent_data <- covid %>% filter(date == max(date)) %>% arrange(desc(cases)) %>% slice(1:5)
library(tidyverse)
covid_recent <- covid %>% filter(date == max(date)) %>% arrange(desc(cases)) %>% slice(1:5)
url <- https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.cs
covid = read_csv(url)
slice(covid,5)
ls(covid)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
slice(covid, 1:5)
covid_recent <- covid %>% filter(date == max(date)) %>% arrange(desc(cases)) %>% slice(1:5)
View(covid_recent)
most_current_cases <-covid %>% filter(date == max(date)) %>% group_by(state) %>% summarize(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice(1:5)
worst_death_ratio <- covid %>% filter(cases> 0, country != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
worst_death_ratio <- covid %>% filter(cases> 0, county != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
worst_death_ratio <- covid %>% filter(cases> 0, state != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
worst_death_ratio_state <- covid %>% filter(cases> 0, state != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
View(worst_death_ratio)
View(worst_death_ratio_state)
View(worst_death_ratio_state)
worst_death_ratio <- covid %>% filter(cases> 0, county != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
View(worst_death_ratio)
View(worst_death_ratio_state)
worst_death_ratio_county <- covid %>% filter(cases> 0, county != "Unknown") %>% mutate(death_case_ratio = 100 * (deaths / cases)) %>% arrange(desc(death_case_ratio)) %>% slice(1:5)
View(worst_death_ratio)
View(most_current_cases)
View(covid_recent)
View(worst_death_ratio)
View(worst_death_ratio_state)
View(worst_death_ratio_county)
View(worst_death_ratio)
rm(worst_death_ratio)
mkdir R
library(tidyverse)
library(dplyr)
library(ggplot2)
library((ggplot(data.frame(covid))))
top_states <- covid %>% filter(date == covid_recent) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
rlang::last_trace()
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
latest_data <- max(covid$date)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
print(top_states)
covid_top6 <- covid %>% filter(state %in% top_states)
View(covid_top6)
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state))
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line() +
facet_wrap(~ state, scales = "free_y") +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line() +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line(size = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
covid_top6 <- covid %>% filter(state %in% top_states) %>% group_by(state, date) %>% summarise(total_cases = sum(cases, na.rm = TRUE))
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
latest_data <- max(covid$date)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
covid_top6 <- covid %>% filter(state %in% top_states) %>% group_by(state, date) %>% summarise(total_cases = sum(cases, na.rm = TRUE))
ggplot(data = covid_top6, aes(x = date, y = cases, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none") + plot + scale_y_log10()
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + scale_y_log10()
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + scale_y_log10() +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + ylim(500000, 12500000) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + ylim(2500000, 12500000) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggsave("img/covid_top6_states.png", plot = plot, width = 10, height = 6, dpi = 300)
daily_cases <- covid %>% group_by(date) %>% summarise(total_cases = sum(cases, na.rm _TRUE))
daily_cases <- covid %>% group_by(date) %>% summarise(total_cases = sum(cases, na.rm _ TRUE))
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + ylim(2500000, 12500000) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
daily_cases <- covid %>% group_by(date) %>% summarize(total_cases = sum(cases, na.rm = TRUE))
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = comma) +
theme_light()
library(scales)
install.packages("scales")
install.packages("scales")
library(scales)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = ) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = ) +
theme_light()
library ("ggplot")
library (tidyverse)
library(ggplot)
library(ggplot2)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = ) +
theme_light()
library(ggplot2)
library(dplyr)
library(scales)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = scales:: comma()) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = scales::comma) +
theme_light()
print(usa_plot)
View(daily_cases)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + ylim(103017900, 103910100)
print(usa_plot)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + ylim(100000000, 104000000)
View(usa_plot)
print(usa_plot)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + ylim(100000000, 104000000) +
scale_y_continuous(labels = scales::comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(labels = scales::comma) +
theme_light()
print(usa_plot)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + scale_y_log10() +
scale_y_continuous(labels = scales::comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + scale_y_log10() +
scale_y_continuous(limits = c(0, 50000), labels = scales::comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") + scale_y_log10() +
scale_y_continuous(limits = c(100000000, 104000000), labels = scales::comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
scale_y_continuous(limits = c(100000000, 104000000), labels = scales::comma) +
theme_light()
print(usa_plot)
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
coord_cartesian(ylim =c(100000000, 104000000), labels = scales::comma) +
theme_light()
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
coord_cartesian(ylim =c(100000000, 104000000)) +
theme_light()
print(usa_plot)
latest_data <- max(covid$date)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
covid_top6 <- covid %>% filter(state %in% top_states) %>% group_by(state, date) %>% summarise(total_cases = sum(cases, na.rm = TRUE))
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + coord_cartesian(ylim = 2500000, 12500000 ) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
latest_data <- max(covid$date)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
covid_top6 <- covid %>% filter(state %in% top_states) %>% group_by(state, date) %>% summarise(total_cases = sum(cases, na.rm = TRUE))
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + coord_cartesian(ylim = 2500000, 12500000) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) + (coord_cartesian(ylim = 2500000, 12500000)) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) +
coord_cartesian(ylim = c(2500000, 12500000)) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
library(rmarkdown)
rmarkdown::render("day-07.R", output_format = "html_document")
{r, message=FALSE, warning=FALSE}
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
data <- read.csv ("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv")
data <- read.csv ()
read(covid)
latest_data <- max(covid$date)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
covid_top6 <- covid %>% filter(state %in% top_states) %>% group_by(state, date) %>% summarise(total_cases = sum(cases, na.rm = TRUE))
ggplot(data = covid_top6, aes(x = date, y = total_cases, group = state, colour = state)) +
geom_line(linewidth = 1) +
coord_cartesian(ylim = c(2500000, 12500000)) +
facet_wrap(~ state) +
labs(title = "COVID-19 Cases Over Time in the 6 Most Affected State in the United States",
x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
theme_minimal() +
theme(legend.position = "none")
daily_cases <- covid %>% group_by(date) %>% summarize(total_cases = sum(cases, na.rm = TRUE))
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
coord_cartesian(ylim =c(100000000, 104000000)) +
theme_light()
daily_cases <- covid %>% group_by(date) %>% summarize(total_cases = sum(cases, na.rm = TRUE))
usa_plot <- ggplot(daily_cases, aes (x = date, y = total_cases)) +
geom_col(fill = "steelblue") +
labs(title = "Daily Total COVID-19 Cases in the United States", x = "Date", y = "Number of Cases",
caption = "Source: NY Times COVID-19 Data") +
coord_cartesian(ylim =c(100000000, 104000000)) +
theme_light()
print(usa_plot)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
top_states <- covid %>% filter(date == latest_data) %>% group_by(state) %>% summarise(total_cases = sum(cases, na.rm = TRUE)) %>% arrange(desc(total_cases)) %>% slice_max(total_cases, n=6) %>% pull(state)
